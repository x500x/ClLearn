<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Rule Name="Application" OverrideMode="Extend" xmlns="http://schemas.microsoft.com/build/2009/properties" xmlns:xliff="https://github.com/dotnet/xliff-tasks" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="xliff">
  <Rule.Categories>
    <Category Name="ApplicationFramework" DisplayName="应用程序框架" Description="应用程序框架设置。" />
    <Category Name="WPF" DisplayName="WPF" Description="特定于 WPF 应用程序的设置。" />
  </Rule.Categories>
  <StringProperty Name="CreateOrOpenAppManifest" DisplayName="创建或打开 Windows 设置的应用清单。" Category="General">
    <StringProperty.ValueEditors>
      <ValueEditor EditorType="LinkAction">
        <ValueEditor.Metadata>
          <NameValuePair Name="Action" Value="Command" />
          <NameValuePair Name="Command" Value="CreateOrOpenAppManifest" />
        </ValueEditor.Metadata>
      </ValueEditor>
    </StringProperty.ValueEditors>
  </StringProperty>
  <!-- TODO: Add a hyperlink/button to open the ApplicationEvents.vb. Previously, we had a View Application Events button. -->
  <!-- The StartupObject property has a different set of appropriate values for VB and for C#.
       For VB projects, we expect to see every Form in the assembly directly or indirectly inherited from Form.
       We specify this by setting the SearchForEntryPointsInFormsOnly to true.
       We also want to ensure that the property always has a value. -->
  <DynamicEnumProperty Name="StartupObject" DisplayName="启动对象" Description="定义在加载应用程序时要调用的入口点。通常，此项设置为应用程序中的主窗体或应用程序启动时运行的 &quot;Main&quot; 过程。类库不定义入口点。" Category="General" EnumProvider="StartupObjectsEnumProvider">
    <DynamicEnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </DynamicEnumProperty.DataSource>
    <DynamicEnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
            (not (has-evaluated-value "Application" "OutputType" "Library"))
        </NameValuePair.Value>
      </NameValuePair>
    </DynamicEnumProperty.Metadata>
    <DynamicEnumProperty.ProviderSettings>
      <NameValuePair Name="IncludeEmptyValue" Value="false" />
      <NameValuePair Name="SearchForEntryPointsInFormsOnly" Value="true" />
    </DynamicEnumProperty.ProviderSettings>
  </DynamicEnumProperty>
  <!-- This property actually is saved as MyType. -->
  <BoolProperty Name="UseApplicationFramework" DisplayName="应用程序框架" Description="为此项目启用 Visual Basic 应用程序框架。通常，这些设置会序列化为 myapp 文件。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195444" Category="ApplicationFramework">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </BoolProperty.DataSource>
    <BoolProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (is-vb)
        </NameValuePair.Value>
      </NameValuePair>
    </BoolProperty.Metadata>
  </BoolProperty>
  <BoolProperty Name="EnableVisualStyles" DisplayName="Windows 视觉样式" Description="使用最新版本的控制库 COMCTL 提供具有新式视觉样式的控件呈现。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195445" Category="ApplicationFramework">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </BoolProperty.DataSource>
    <BoolProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </BoolProperty.Metadata>
  </BoolProperty>
  <BoolProperty Name="SingleInstance" DisplayName="单实例应用程序" Description="阻止用户运行应用程序的多个实例。默认值被清除，这允许运行应用程序的多个实例。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195340" Category="ApplicationFramework">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </BoolProperty.DataSource>
    <BoolProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </BoolProperty.Metadata>
  </BoolProperty>
  <BoolProperty Name="SaveMySettingsOnExit" DisplayName="退出时保存用户设置" Description="控制用户关闭计算机时是否保存设置。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195171" Category="ApplicationFramework">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </BoolProperty.DataSource>
    <BoolProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </BoolProperty.Metadata>
  </BoolProperty>
  <EnumProperty Name="HighDpiMode" DisplayName="高 DPI 模式" Description="为应用程序指定应用程序范围的 HighDpiMode。可以通过 ApplyApplicationDefaults 事件以编程方式替代此设置。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195173" Category="ApplicationFramework">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (and 
            (has-evaluated-value "Application" "UseApplicationFramework" true)
            (has-net-core-app-version-or-greater "6.0")
          )
        </NameValuePair.Value>
      </NameValuePair>
    </EnumProperty.Metadata>
    <!-- TODO: Validate DisplayName values. -->
    <EnumValue Name="0" DisplayName="DPI 不知情 - 无缩放，并假定 100% 缩放。" />
    <EnumValue Name="4" DisplayName="DPI 不知情，GDI 已缩放 - 和 DPI 不知情相似，但针对非双缓冲图形内容进行了优化。" />
    <EnumValue Name="1" DisplayName="系统感知 - 主监视器的 DPI 是缩放前导。" />
    <EnumValue Name="2" DisplayName="按监视器 - 在启动和更改时检测到 DPI。" />
    <EnumValue Name="3" DisplayName="按监视器 V2 - 在启动和更改时检测到 DPI，包括子窗口" />
  </EnumProperty>
  <EnumProperty Name="VBAuthenticationMode" DisplayName="身份验证模式" Description="指定在需要时标识已登录用户的方法。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195341" Category="ApplicationFramework">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </EnumProperty.Metadata>
    <!-- TODO: Validate DisplayName values. -->
    <EnumValue Name="Windows" DisplayName="Windows - 在运行时通过 My.User 检索用户信息。" />
    <EnumValue Name="ApplicationDefined" DisplayName="应用程序定义 - 在应用程序中实现的自定义身份验证。" />
  </EnumProperty>
  <EnumProperty Name="ShutdownMode" DisplayName="关闭模式" Description="指示导致应用程序关闭的条件。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195343" Category="ApplicationFramework">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </EnumProperty.Metadata>
    <EnumValue Name="AfterMainFormCloses" DisplayName="在主窗体关闭时关闭。" />
    <EnumValue Name="AfterAllFormsClose" DisplayName="仅在最后一个窗体关闭后才关闭。" />
  </EnumProperty>
  <!-- This property has been made temporarily invisible, and is blocked on https://github.com/dotnet/project-system/issues/8286
       When that is fixed and this property displayed, its suppression should be removed from NonVisiblePropertiesShouldntBeLocalized. -->
  <DynamicEnumProperty Name="SplashScreen" DisplayName="初始屏幕" Description="设置要用作应用程序初始屏幕的窗体。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195177" Category="ApplicationFramework" EnumProvider="SplashScreenEnumProvider">
    <DynamicEnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </DynamicEnumProperty.DataSource>
    <DynamicEnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </DynamicEnumProperty.Metadata>
    <DynamicEnumProperty.ProviderSettings>
      <!-- We want an explicit item representing the empty value. We can remove this setting
           when the enum provider starts including it by default. -->
      <NameValuePair Name="IncludeEmptyValue" Value="true" />
    </DynamicEnumProperty.ProviderSettings>
  </DynamicEnumProperty>
  <StringProperty Name="MinimumSplashScreenDisplayTime" DisplayName="最短初始屏幕显示时间" Description="设置显示初始屏幕的最短时间长度(以毫秒为单位)。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2195289" Category="ApplicationFramework">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </StringProperty.DataSource>
    <StringProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (has-evaluated-value "Application" "UseApplicationFramework" true)
        </NameValuePair.Value>
      </NameValuePair>
    </StringProperty.Metadata>
    <StringProperty.ValueEditors>
      <ValueEditor EditorType="String">
        <ValueEditor.Metadata>
          <NameValuePair Name="EvaluatedValueValidationRegex" Value="^\d*$" />
          <NameValuePair Name="EvaluatedValueFailedValidationMessage" Value="此属性必须是整数。" xliff:LocalizedProperties="Value" />
        </ValueEditor.Metadata>
      </ValueEditor>
    </StringProperty.ValueEditors>
  </StringProperty>
  <DynamicEnumProperty Name="StartupURI" DisplayName="启动 URI" Description="指定应用程序加载时将打开的窗口。" EnumProvider="PageItemEnumProvider" Category="WPF">
    <DynamicEnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </DynamicEnumProperty.DataSource>
    <DynamicEnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (and
            (has-evaluated-value "Application" "UseWPF" true)
            (has-evaluated-value "Application" "UseApplicationFramework" true)
            (has-evaluated-value "Application" "OutputType" "WinExe"))
        </NameValuePair.Value>
      </NameValuePair>
    </DynamicEnumProperty.Metadata>
  </DynamicEnumProperty>
  <EnumProperty Name="ShutdownMode_WPF" DisplayName="关闭模式" Description="指定应用程序何时应自动关闭。" Category="WPF">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (and
            (has-evaluated-value "Application" "UseWPF" true)
            (has-evaluated-value "Application" "UseApplicationFramework" true)
            (has-evaluated-value "Application" "OutputType" "WinExe"))
        </NameValuePair.Value>
      </NameValuePair>
    </EnumProperty.Metadata>
    <!-- Note these match the values of the System.Windows.ShutdownMode enum. -->
    <EnumValue Name="OnLastWindowClose" DisplayName="在上一窗口关闭时" />
    <EnumValue Name="OnMainWindowClose" DisplayName="在主窗口关闭时" />
    <EnumValue Name="OnExplicitShutdown" DisplayName="在显式关闭时" />
  </EnumProperty>
  <StringProperty Name="CreateOrOpenApplicationXaml" DisplayName="编辑 XAML" Description="打开 Application.xaml 文件" Category="WPF">
    <StringProperty.Metadata>
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (and
            (has-evaluated-value "Application" "UseWPF" true)
            (has-evaluated-value "Application" "UseApplicationFramework" true)
            (has-evaluated-value "Application" "OutputType" "WinExe"))
        </NameValuePair.Value>
      </NameValuePair>
    </StringProperty.Metadata>
    <StringProperty.ValueEditors>
      <ValueEditor EditorType="LinkAction">
        <ValueEditor.Metadata>
          <NameValuePair Name="Action" Value="Command" />
          <NameValuePair Name="Command" Value="CreateOrOpenApplicationXaml" />
        </ValueEditor.Metadata>
      </ValueEditor>
    </StringProperty.ValueEditors>
  </StringProperty>
</Rule>