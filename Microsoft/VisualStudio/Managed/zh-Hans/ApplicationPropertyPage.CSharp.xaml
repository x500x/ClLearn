<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Rule Name="Application" OverrideMode="Extend" xmlns="http://schemas.microsoft.com/build/2009/properties">
  <Rule.Categories>
    <Category Name="Resources" DisplayName="Win32 资源" Description="应用程序的资源设置。" />
    <Category Name="Packaging" DisplayName="正在打包" Description="应用程序的打包设置。" />
  </Rule.Categories>
  <EnumProperty Name="ResourceSpecificationKind" DisplayName="资源" Description="指定应用程序资源的管理方式。" Category="Resources">
    <EnumProperty.DataSource>
      <DataSource PersistedName="ResourceSpecificationKind" Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumValue Name="IconAndManifest" DisplayName="图标和清单" />
    <EnumValue Name="ResourceFile" DisplayName="资源文件" />
  </EnumProperty>
  <EnumProperty Name="ApplicationManifestKind" DisplayName="清单" Description="当应用程序在 Windows Vista 或更高版本下的用户帐户控制(UAC)下运行时，选择一个清单生成选项。选项包括默认清单、无清单或由项目提供的自定义清单。" Category="Resources">
    <EnumProperty.DataSource>
      <DataSource PersistedName="ApplicationManifestKind" Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </EnumProperty.DataSource>
    <EnumProperty.Metadata>
      <NameValuePair Name="DependsOn" Value="Application::ResourceSpecificationKind" />
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>(has-evaluated-value "Application" "ResourceSpecificationKind" "IconAndManifest")</NameValuePair.Value>
      </NameValuePair>
    </EnumProperty.Metadata>
    <EnumValue Name="DefaultManifest" DisplayName="嵌入带默认设置的清单" />
    <EnumValue Name="NoManifest" DisplayName="创建不带清单的应用程序" />
    <EnumValue Name="CustomManifest" DisplayName="使用自定义清单" />
  </EnumProperty>
  <StringProperty Name="ApplicationManifestPath" DisplayName="清单路径" Description="自定义清单文件的路径。" Category="Resources" Subtype="file">
    <StringProperty.DataSource>
      <DataSource PersistedName="ApplicationManifestPath" Persistence="ProjectFileWithInterception" HasConfigurationCondition="False" />
    </StringProperty.DataSource>
    <StringProperty.Metadata>
      <NameValuePair Name="DependsOn" Value="Application::ResourceSpecificationKind;Application::ApplicationManifestKind" />
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>
          (and 
            (has-evaluated-value "Application" "ApplicationManifestKind" "CustomManifest")
            (has-evaluated-value "Application" "ResourceSpecificationKind" "IconAndManifest"))
        </NameValuePair.Value>
      </NameValuePair>
    </StringProperty.Metadata>
  </StringProperty>
  <StringProperty Name="Win32Resource" DisplayName="资源文件" Description="指定项目的资源文件。" HelpUrl="https://go.microsoft.com/fwlink/?linkid=2147078" Category="Resources">
    <StringProperty.ValueEditors>
      <ValueEditor EditorType="FilePath">
        <ValueEditor.Metadata>
          <NameValuePair Name="FileTypeFilter" Value="Win32 resource files (*.res)|*.res|All files (*.*)|*.*" />
        </ValueEditor.Metadata>
      </ValueEditor>
    </StringProperty.ValueEditors>
    <StringProperty.Metadata>
      <NameValuePair Name="DependsOn" Value="Application::ResourceSpecificationKind" />
      <NameValuePair Name="VisibilityCondition">
        <NameValuePair.Value>(has-evaluated-value "Application" "ResourceSpecificationKind" "ResourceFile")</NameValuePair.Value>
      </NameValuePair>
    </StringProperty.Metadata>
  </StringProperty>
</Rule>