<?xml version="1.0" encoding="utf-8"?>
<!--Copyright, Microsoft Corporation, All rights reserved.-->
<Rule Name="TypeScriptBuild" DisplayName="TypeScript" PageTemplate="generic" Description="TypeScript 生成属性" xmlns="http://schemas.microsoft.com/build/2009/properties">

  <Rule.Categories>
    <Category Name="General" DisplayName="常规"/>
    <Category Name="Output" DisplayName="输出"/>
    <Category Name="Debugging" DisplayName="调试"/>
  </Rule.Categories>

  <Rule.DataSource>
    <DataSource Persistence="ProjectFile" Label="Configuration"/>
  </Rule.DataSource>

<!-- General -->
  <EnumProperty Name="TypeScriptTarget" DisplayName="ECMAScript 版本" Category="General" Description="要用于已生成的 JavaScript 的 ECMAScript 版本">
    <EnumValue Name="ES3" DisplayName="ECMAScript 3"/>
    <EnumValue Name="ES5" DisplayName="ECMAScript 5"/>
    <EnumValue Name="ES6" DisplayName="ECMAScript 6"/>
    <EnumValue Name="ES2016" DisplayName="ECMAScript 2016"/>
    <EnumValue Name="ES2017" DisplayName="ECMAScript 2017"/>
    <EnumValue Name="ES2018" DisplayName="ECMAScript 2018"/>
    <EnumValue Name="ES2019" DisplayName="ECMAScript 2019"/>
    <EnumValue Name="ES2020" DisplayName="ECMAScript 2020"/>
    <EnumValue Name="ES2021" DisplayName="ECMAScript 2021"/>
    <EnumValue Name="ESNext" DisplayName="ECMAScript Next"/>
  </EnumProperty>

  <EnumProperty Name="TypeScriptJSXEmit" DisplayName=".tsx 文件的编译模式" Category="General" Description="为 .tsx 文件指定 JSX 代码编译模式，这不会影响 .ts 文件">
    <EnumProperty.DataSource> <!-- Indicates there is an interceptor used to specify the default value for TypeScriptJSXEmit -->
      <DataSource HasConfigurationCondition="False" Persistence="ProjectFileWithInterception"/>
    </EnumProperty.DataSource>
    <EnumValue Name="none" DisplayName="无"/>
    <EnumValue Name="preserve" DisplayName="保留 JSX 元素"/>
    <EnumValue Name="react" DisplayName="发出 JSX 元素的 React 调用"/>
  </EnumProperty>
  
  <EnumProperty Name="TypeScriptModuleKind" DisplayName="模块系统" Category="General" Description="外部模块代码生成目标">
    <EnumProperty.DataSource>
      <!-- Indicates there is an interceptor used to specify the default value for TypeScriptModuleKind -->
      <DataSource HasConfigurationCondition="False" Persistence="ProjectFileWithInterception"/>
    </EnumProperty.DataSource>
    <EnumValue Name="none" DisplayName="无"/>
    <EnumValue Name="amd" DisplayName="AMD"/>
    <EnumValue Name="commonjs" DisplayName="CommonJS"/>
    <EnumValue Name="umd" DisplayName="UMD"/>
    <EnumValue Name="system" DisplayName="系统"/>
  </EnumProperty>

  <BoolProperty Name="TypeScriptCompileOnSaveEnabled" DisplayName="在保存时编译" Category="General" Description="在保存时重新编译源"/>

  <BoolProperty Name="TypeScriptNoImplicitAny" DisplayName="不允许隐式 “any” 类型" Category="General" Description="对于隐式 “any” 类型的表达式和声明启用警告"/>

<!-- Output -->
  <BoolProperty Name="TypeScriptRemoveComments" DisplayName="从 JavaScript 输出中删除注释" Category="Output" Description="请勿将注释发出到输出。"/>

  <StringProperty Name="TypeScriptOutFile" DisplayName="将 JavaScript 输出合并到文件中" Category="Output" Description="将输出重定向到文件中"/>

  <StringProperty Name="TypeScriptOutDir" DisplayName="将 JavaScript 输出重定向到目录" Category="Output" Description="将输出重定向到不同于源目录的目录"/>

  <BoolProperty Name="TypeScriptGeneratesDeclarations" DisplayName="生成声明文件" Category="Output" Description="生成对应的 d.ts 文件"/>

   <BoolProperty Name="TypeScriptNoEmitOnError" DisplayName="如果报告了任何错误，请勿发出结果" Category="Output" Description="如果发现错误，则不发出输出"/>

<!-- Debugging -->
  <BoolProperty Name="TypeScriptSourceMap" DisplayName="生成源映射" Category="Debugging" Description="生成对应的 .map 文件"/>

  <StringProperty Name="TypeScriptMapRoot" DisplayName="指定源映射的根目录" Category="Debugging" Description="发送源映射，使得在调试期间源映射将位于源映射根目录中"/>

  <StringProperty Name="TypeScriptSourceRoot" DisplayName="指定 TypeScript 文件的根目录" Category="Debugging" Description="发送源映射，使得在调试期间源映射将位于源根目录中"/>

</Rule>
