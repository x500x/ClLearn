const sigstore = require('sigstore')
const { readFile } = require('fs/promises')
const ci = require('ci-info')
const { env } = process

const INTOTO_PAYLOAD_TYPE = 'application/vnd.in-toto+json'
const INTOTO_STATEMENT_V01_TYPE = 'https://in-toto.io/Statement/v0.1'
const INTOTO_STATEMENT_V1_TYPE = 'https://in-toto.io/Statement/v1'
const SLSA_PREDICATE_V02_TYPE = 'https://slsa.dev/provenance/v0.2'
const SLSA_PREDICATE_V1_TYPE = 'https://slsa.dev/provenance/v1'

const GITHUB_BUILDER_ID_PREFIX = 'https://github.com/actions/runner'
const GITHUB_BUILD_TYPE = 'https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1'

const GITLAB_BUILD_TYPE_PREFIX = 'https://github.com/npm/cli/gitlab'
const GITLAB_BUILD_TYPE_VERSION = 'v0alpha1'

const generateProvenance = async (subject, opts) => {
  let payload
  if (ci.GITHUB_ACTIONS) {
    /* istanbul ignore next - not covering missing env var case */
    const relativeRef = (env.GITHUB_WORKFLOW_REF || '').replace(env.GITHUB_REPOSITORY + '/', '')
    const delimiterIndex = relativeRef.indexOf('@')
    const workflowPath = relativeRef.slice(0, delimiterIndex)
    const workflowRef = relativeRef.slice(delimiterIndex + 1)

    payload = {
      _type: INTOTO_STATEMENT_V1_TYPE,
      subject,
      predicateType: SLSA_PREDICATE_V1_TYPE,
      predicate: {
        buildDefinition: {
          buildType: GITHUB_BUILD_TYPE,
          externalParameters: {
            workflow: {
              ref: workflowRef,
              repository: `${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}`,
              path: workflowPath,
            },
          },
          internalParameters: {
            github: {
              event_name: env.GITHUB_EVENT_NAME,
              repository_id: env.GITHUB_REPOSITORY_ID,
              repository_owner_id: env.GITHUB_REPOSITORY_OWNER_ID,
            },
          },
          resolvedDependencies: [
            {
              uri: `git+${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}@${env.GITHUB_REF}`,
              digest: {
                gitCommit: env.GITHUB_SHA,
              },
            },
          ],
        },
        runDetails: {
          builder: { id: `${GITHUB_BUILDER_ID_PREFIX}/${env.RUNNER_ENVIRONMENT}` },
          metadata: {
            /* eslint-disable-next-line max-len */
            invocationId: `${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}/attempts/${env.GITHUB_RUN_ATTEMPT}`,
          },
        },
      },
    }
  }
  if (ci.GITLAB) {
    payload = {
      _type: INTOTO_STATEMENT_V01_TYPE,
      subject,
      predicateType: SLSA_PREDICATE_V02_TYPE,
      predicate: {
        buildType: `${GITLAB_BUILD_TYPE_PREFIX}/${GITLAB_BUILD_TYPE_VERSION}`,
        builder: { id: `${env.CI_PROJECT_URL}/-/runners/${env.CI_RUNNER_ID}` },
        invocation: {
          configSource: {
            uri: `git+${env.CI_PROJECT_URL}`,
            digest: {
              sha1: env.CI_COMMIT_SHA,
            },
            entryPoint: env.CI_JOB_NAME,
          },
          parameters: {
            CI: env.CI,
            CI_API_GRAPHQL_URL: env.CI_API_GRAPHQL_URL,
            CI_API_V4_URL: env.CI_API_V4_URL,
            CI_BUILD_BEFORE_SHA: env.CI_BUILD_BEFORE_SHA,
            CI_BUILD_ID: env.CI_BUILD_ID,
            CI_BUILD_NAME: env.CI_BUILD_NAME,
            CI_BUILD_REF: env.CI_BUILD_REF,
            CI_BUILD_REF_NAME: env.CI_BUILD_REF_NAME,
            CI_BUILD_REF_SLUG: env.CI_BUILD_REF_SLUG,
            CI_BUILD_STAGE: env.CI_BUILD_STAGE,
            CI_COMMIT_BEFORE_SHA: env.CI_COMMIT_BEFORE_SHA,
            CI_COMMIT_BRANCH: env.CI_COMMIT_BRANCH,
            CI_COMMIT_REF_NAME: env.CI_COMMIT_REF_NAME,
            CI_COMMIT_REF_PROTECTED: env.CI_COMMIT_REF_PROTECTED,
            CI_COMMIT_REF_SLUG: env.CI_COMMIT_REF_SLUG,
            CI_COMMIT_SHA: env.CI_COMMIT_SHA,
            CI_COMMIT_SHORT_SHA: env.CI_COMMIT_SHORT_SHA,
            CI_COMMIT_TIMESTAMP: env.CI_COMMIT_TIMESTAMP,
            CI_COMMIT_TITLE: env.CI_COMMIT_TITLE,
            CI_CONFIG_PATH: env.CI_CONFIG_PATH,
            CI_DEFAULT_BRANCH: env.CI_DEFAULT_BRANCH,
            CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX:
              env.CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX,
            CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX: env.CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX,
            CI_DEPENDENCY_PROXY_SERVER: env.CI_DEPENDENCY_PROXY_SERVER,
            CI_DEPENDENCY_PROXY_USER: env.CI_DEPENDENCY_PROXY_USER,
            CI_JOB_ID: env.CI_JOB_ID,
            CI_JOB_NAME: env.CI_JOB_NAME,
            CI_JOB_NAME_SLUG: env.CI_JOB_NAME_SLUG,
            CI_JOB_STAGE: env.CI_JOB_STAGE,
            CI_JOB_STARTED_AT: env.CI_JOB_STARTED_AT,
            CI_JOB_URL: env.CI_JOB_URL,
            CI_NODE_TOTAL: env.CI_NODE_TOTAL,
            CI_PAGES_DOMAIN: env.CI_PAGES_DOMAIN,
            CI_PAGES_URL: env.CI_PAGES_URL,
            CI_PIPELINE_CREATED_AT: env.CI_PIPELINE_CREATED_AT,
            CI_PIPELINE_ID: env.CI_PIPELINE_ID,
            CI_PIPELINE_IID: env.CI_PIPELINE_IID,
            CI_PIPELINE_SOURCE: env.CI_PIPELINE_SOURCE,
            CI_PIPELINE_URL: env.CI_PIPELINE_URL,
            CI_PROJECT_CLASSIFICATION_LABEL: env.CI_PROJECT_CLASSIFICATION_LABEL,
            CI_PROJECT_DESCRIPTION: env.CI_PROJECT_DESCRIPTION,
            CI_PROJECT_ID: env.CI_PROJECT_ID,
            CI_PROJECT_NAME: env.CI_PROJECT_NAME,
            CI_PROJECT_NAMESPACE: env.CI_PROJECT_NAMESPACE,
            CI_PROJECT_NAMESPACE_ID: env.CI_PROJECT_NAMESPACE_ID,
            CI_PROJECT_PATH: env.CI_PROJECT_PATH,
            CI_PROJECT_PATH_SLUG: env.CI_PROJECT_PATH_SLUG,
            CI_PROJECT_REPOSITORY_LANGUAGES: env.CI_PROJECT_REPOSITORY_LANGUAGES,
            CI_PROJECT_ROOT_NAMESPACE: env.CI_PROJECT_ROOT_NAMESPACE,
            CI_PROJECT_TITLE: env.CI_PROJECT_TITLE,
            CI_PROJECT_URL: env.CI_PROJECT_URL,
            CI_PROJECT_VISIBILITY: env.CI_PROJECT_VISIBILITY,
            CI_REGISTRY: env.CI_REGISTRY,
            CI_REGISTRY_IMAGE: env.CI_REGISTRY_IMAGE,
            CI_REGISTRY_USER: env.CI_REGISTRY_USER,
            CI_RUNNER_DESCRIPTION: env.CI_RUNNER_DESCRIPTION,
            CI_RUNNER_ID: env.CI_RUNNER_ID,
            CI_RUNNER_TAGS: env.CI_RUNNER_TAGS,
            CI_SERVER_HOST: env.CI_SERVER_HOST,
            CI_SERVER_NAME: env.CI_SERVER_NAME,
            CI_SERVER_PORT: env.CI_SERVER_PORT,
            CI_SERVER_PROTOCOL: env.CI_SERVER_PROTOCOL,
            CI_SERVER_REVISION: env.CI_SERVER_REVISION,
            CI_SERVER_SHELL_SSH_HOST: env.CI_SERVER_SHELL_SSH_HOST,
            CI_SERVER_SHELL_SSH_PORT: env.CI_SERVER_SHELL_SSH_PORT,
            CI_SERVER_URL: env.CI_SERVER_URL,
            CI_SERVER_VERSION: env.CI_SERVER_VERSION,
            CI_SERVER_VERSION_MAJOR: env.CI_SERVER_VERSION_MAJOR,
            CI_SERVER_VERSION_MINOR: env.CI_SERVER_VERSION_MINOR,
            CI_SERVER_VERSION_PATCH: env.CI_SERVER_VERSION_PATCH,
            CI_TEMPLATE_REGISTRY_HOST: env.CI_TEMPLATE_REGISTRY_HOST,
            GITLAB_CI: env.GITLAB_CI,
            GITLAB_FEATURES: env.GITLAB_FEATURES,
            GITLAB_USER_ID: env.GITLAB_USER_ID,
            GITLAB_USER_LOGIN: env.GITLAB_USER_LOGIN,
            RUNNER_GENERATE_ARTIFACTS_METADATA: env.RUNNER_GENERATE_ARTIFACTS_METADATA,
          },
          environment: {
            name: env.CI_RUNNER_DESCRIPTION,
            architecture: env.CI_RUNNER_EXECUTABLE_ARCH,
            server: env.CI_SERVER_URL,
            project: env.CI_PROJECT_PATH,
            job: {
              id: env.CI_JOB_ID,
            },
            pipeline: {
              id: env.CI_PIPELINE_ID,
              ref: env.CI_CONFIG_PATH,
            },
          },
        },
        metadata: {
          buildInvocationId: `${env.CI_JOB_URL}`,
          completeness: {
            parameters: true,
            environment: true,
            materials: false,
          },
          reproducible: false,
        },
        materials: [
          {
            uri: `git+${env.CI_PROJECT_URL}`,
            digest: {
              sha1: env.CI_COMMIT_SHA,
            },
          },
        ],
      },
    }
  }
  return sigstore.attest(Buffer.from(JSON.stringify(payload)), INTOTO_PAYLOAD_TYPE, opts)
}

const verifyProvenance = async (subject, provenancePath) => {
  let provenanceBundle
  try {
    provenanceBundle = JSON.parse(await readFile(provenancePath))
  } catch (err) {
    err.message = `Invalid provenance provided: ${err.message}`
    throw err
  }

  const payload = extractProvenance(provenanceBundle)
  if (!payload.subject || !payload.subject.length) {
    throw new Error('No subject found in sigstore bundle payload')
  }
  if (payload.subject.length > 1) {
    throw new Error('Found more than one subject in the sigstore bundle payload')
  }

  const bundleSubject = payload.subject[0]
  if (subject.name !== bundleSubject.name) {
    throw new Error(
      `Provenance subject ${bundleSubject.name} does not match the package: ${subject.name}`
    )
  }
  if (subject.digest.sha512 !== bundleSubject.digest.sha512) {
    throw new Error('Provenance subject digest does not match the package')
  }

  await sigstore.verify(provenanceBundle)
  return provenanceBundle
}

const extractProvenance = (bundle) => {
  if (!bundle?.dsseEnvelope?.payload) {
    throw new Error('No dsseEnvelope with payload found in sigstore bundle')
  }
  try {
    return JSON.parse(Buffer.from(bundle.dsseEnvelope.payload, 'base64').toString('utf8'))
  } catch (err) {
    err.message = `Failed to parse payload from dsseEnvelope: ${err.message}`
    throw err
  }
}

module.exports = {
  generateProvenance,
  verifyProvenance,
}

// SIG // Begin signature block
// SIG // MIIoPQYJKoZIhvcNAQcCoIIoLjCCKCoCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // n08a4Kc0XtOP16+VQjnPAr8gyUOkxFXhU2KZWveRLi2g
// SIG // gg2LMIIGCTCCA/GgAwIBAgITMwAAA4TZaH1mzHVLoQAA
// SIG // AAADhDANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMDcxMzIzNDUzOFoX
// SIG // DTI0MDkxNTIzNDUzOFowgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCAzcmQgUGFydHkg
// SIG // QXBwbGljYXRpb24gQ29tcG9uZW50MIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAznLqoz/10YOqShXj
// SIG // Gln6TE4BGUwZ3uJsXV3BIhK2/5WfWH8YMWvFoTgOul1P
// SIG // rrDlA5qOs/1qSNylRSLn+DKx4e+sQC/x8qVPWx+4bwhu
// SIG // NHaNGEMZsppPjtuc10OmdECsioQzVOyu/TlVohP0DUT1
// SIG // w8V4+uR06k9qm+XVcw84nrH6xac865B7TswYpBBBZdaG
// SIG // X5mTst5UnoomlS8JIGqD6WDAyvlmwDRl0C0Omj+b8lg7
// SIG // ZJ4wz9hfYI6eo/kOu2wgYyLPBaXR9iDehwLxN1/xOGDi
// SIG // Dq2WNiWFM/aaBYda645BrjOAk9rc3aoX5AdvEDp7oRMi
// SIG // fgJgdwdNaC/WoTUomQIDAQABo4IBczCCAW8wHwYDVR0l
// SIG // BBgwFgYKKwYBBAGCN0wRAQYIKwYBBQUHAwMwHQYDVR0O
// SIG // BBYEFBzcFkQMR/V8OGV/cF0ZRXO9ery8MEUGA1UdEQQ+
// SIG // MDykOjA4MR4wHAYDVQQLExVNaWNyb3NvZnQgQ29ycG9y
// SIG // YXRpb24xFjAUBgNVBAUTDTIzMTUyMis1MDExNDgwHwYD
// SIG // VR0jBBgwFoAUSG5k5VAF04KqFzc3IrVtqMp1ApUwVAYD
// SIG // VR0fBE0wSzBJoEegRYZDaHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraW9wcy9jcmwvTWljQ29kU2lnUENBMjAx
// SIG // MV8yMDExLTA3LTA4LmNybDBhBggrBgEFBQcBAQRVMFMw
// SIG // UQYIKwYBBQUHMAKGRWh0dHA6Ly93d3cubWljcm9zb2Z0
// SIG // LmNvbS9wa2lvcHMvY2VydHMvTWljQ29kU2lnUENBMjAx
// SIG // MV8yMDExLTA3LTA4LmNydDAMBgNVHRMBAf8EAjAAMA0G
// SIG // CSqGSIb3DQEBCwUAA4ICAQAnvqLcbzrt8+kzifeRGz6b
// SIG // UaHMp1aMqJtfMarjiUinqgzSLbtqZslaWomQ4T7LS8rq
// SIG // NJl8jSz4d0wJfm6LblH6RWQzhs4JqllQa3R0MbLt7fvs
// SIG // ehsNASX0L5/3NP5VP40U0UwKe0u4wKo6qcjHNMr66y+s
// SIG // b1DZ965C5Hctslwx1qR3RMeSXaSQ6YJ+Y9bb9xhnbXmH
// SIG // YWZW9h6JWnFYriUm3jHRubAw7KXMPMWNQ7OBTF6uzGKi
// SIG // 2ELK/CsFyWfeUm6GdPVf+TDsKShhoZXtAXOZwBK3SQTY
// SIG // 42gSwTBg4oPTldGd2SH2OIzhZXkxLCuSzk0LUmjVQ+K2
// SIG // xvkJzLMHi2oO6lTO8+SHjqhO1GPwnwhJLJfoaynNzAb3
// SIG // XMj3CdvPcd4EZDh9PRSI0SAHxaQQ0pD4+B1uSyqjUr9w
// SIG // GxZbisemYGzWIcB8UEsQ6mLE5QI7Z2zI2CNkU60iDI4B
// SIG // mEb38Gue8qcj3Zcs5teEOVDYILFsq9ToPkG0HluvkQhu
// SIG // hblf5xAGKzIHh5TEAXedGlYU3QXquQkdxs+quGlS+5xH
// SIG // Q0enmLi9FNXuBKC9jmAaJN8uKwS96+e5yxBGesTBgHuX
// SIG // hwT7YHLj8OUv2iQ66KXrvuAV0ouUf6hpLU5Gyn5STAJX
// SIG // 1xy+muuKPPIfIvGWeBxxzONasTAedo/W4GggkBSRZSyT
// SIG // 7zCCB3owggVioAMCAQICCmEOkNIAAAAAAAMwDQYJKoZI
// SIG // hvcNAQELBQAwgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQI
// SIG // EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
// SIG // HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xMjAw
// SIG // BgNVBAMTKU1pY3Jvc29mdCBSb290IENlcnRpZmljYXRl
// SIG // IEF1dGhvcml0eSAyMDExMB4XDTExMDcwODIwNTkwOVoX
// SIG // DTI2MDcwODIxMDkwOVowfjELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEoMCYGA1UEAxMfTWljcm9zb2Z0IENvZGUgU2lnbmlu
// SIG // ZyBQQ0EgMjAxMTCCAiIwDQYJKoZIhvcNAQEBBQADggIP
// SIG // ADCCAgoCggIBAKvw+nIQHC6t2G6qghBNNLrytlghn0Ib
// SIG // KmvpWlCquAY4GgRJun/DDB7dN2vGEtgL8DjCmQawyDnV
// SIG // ARQxQtOJDXlkh36UYCRsr55JnOloXtLfm1OyCizDr9mp
// SIG // K656Ca/XllnKYBoF6WZ26DJSJhIv56sIUM+zRLdd2MQu
// SIG // A3WraPPLbfM6XKEW9Ea64DhkrG5kNXimoGMPLdNAk/jj
// SIG // 3gcN1Vx5pUkp5w2+oBN3vpQ97/vjK1oQH01WKKJ6cuAS
// SIG // OrdJXtjt7UORg9l7snuGG9k+sYxd6IlPhBryoS9Z5JA7
// SIG // La4zWMW3Pv4y07MDPbGyr5I4ftKdgCz1TlaRITUlwzlu
// SIG // ZH9TupwPrRkjhMv0ugOGjfdf8NBSv4yUh7zAIXQlXxgo
// SIG // tswnKDglmDlKNs98sZKuHCOnqWbsYR9q4ShJnV+I4iVd
// SIG // 0yFLPlLEtVc/JAPw0XpbL9Uj43BdD1FGd7P4AOG8rAKC
// SIG // X9vAFbO9G9RVS+c5oQ/pI0m8GLhEfEXkwcNyeuBy5yTf
// SIG // v0aZxe/CHFfbg43sTUkwp6uO3+xbn6/83bBm4sGXgXvt
// SIG // 1u1L50kppxMopqd9Z4DmimJ4X7IvhNdXnFy/dygo8e1t
// SIG // wyiPLI9AN0/B4YVEicQJTMXUpUMvdJX3bvh4IFgsE11g
// SIG // lZo+TzOE2rCIF96eTvSWsLxGoGyY0uDWiIwLAgMBAAGj
// SIG // ggHtMIIB6TAQBgkrBgEEAYI3FQEEAwIBADAdBgNVHQ4E
// SIG // FgQUSG5k5VAF04KqFzc3IrVtqMp1ApUwGQYJKwYBBAGC
// SIG // NxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8G
// SIG // A1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUci06AjGQ
// SIG // Q7kUBU7h6qfHMdEjiTQwWgYDVR0fBFMwUTBPoE2gS4ZJ
// SIG // aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwv
// SIG // cHJvZHVjdHMvTWljUm9vQ2VyQXV0MjAxMV8yMDExXzAz
// SIG // XzIyLmNybDBeBggrBgEFBQcBAQRSMFAwTgYIKwYBBQUH
// SIG // MAKGQmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kv
// SIG // Y2VydHMvTWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIy
// SIG // LmNydDCBnwYDVR0gBIGXMIGUMIGRBgkrBgEEAYI3LgMw
// SIG // gYMwPwYIKwYBBQUHAgEWM2h0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2lvcHMvZG9jcy9wcmltYXJ5Y3BzLmh0
// SIG // bTBABggrBgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBw
// SIG // AG8AbABpAGMAeQBfAHMAdABhAHQAZQBtAGUAbgB0AC4g
// SIG // HTANBgkqhkiG9w0BAQsFAAOCAgEAZ/KGpZjgVHkaLtPY
// SIG // dGcimwuWEeFjkplCln3SeQyQwWVfLiw++MNy0W2D/r4/
// SIG // 6ArKO79HqaPzadtjvyI1pZddZYSQfYtGUFXYDJJ80hpL
// SIG // HPM8QotS0LD9a+M+By4pm+Y9G6XUtR13lDni6WTJRD14
// SIG // eiPzE32mkHSDjfTLJgJGKsKKELukqQUMm+1o+mgulaAq
// SIG // PyprWEljHwlpblqYluSD9MCP80Yr3vw70L01724lruWv
// SIG // J+3Q3fMOr5kol5hNDj0L8giJ1h/DMhji8MUtzluetEk5
// SIG // CsYKwsatruWy2dsViFFFWDgycScaf7H0J/jeLDogaZiy
// SIG // WYlobm+nt3TDQAUGpgEqKD6CPxNNZgvAs0314Y9/HG8V
// SIG // fUWnduVAKmWjw11SYobDHWM2l4bf2vP48hahmifhzaWX
// SIG // 0O5dY0HjWwechz4GdwbRBrF1HxS+YWG18NzGGwS+30HH
// SIG // Diju3mUv7Jf2oVyW2ADWoUa9WfOXpQlLSBCZgB/QACnF
// SIG // sZulP0V3HjXG0qKin3p6IvpIlR+r+0cjgPWe+L9rt0uX
// SIG // 4ut1eBrs6jeZeRhL/9azI2h15q/6/IvrC4DqaTuv/DDt
// SIG // BEyO3991bWORPdGdVk5Pv4BXIqF4ETIheu9BCrE/+6jM
// SIG // pF3BoYibV3FWTkhFwELJm3ZbCoBIa/15n8G9bW1qyVJz
// SIG // Ew16UM0xghoKMIIaBgIBATCBlTB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExAhMzAAADhNlofWbMdUuhAAAA
// SIG // AAOEMA0GCWCGSAFlAwQCAQUAoIGuMBkGCSqGSIb3DQEJ
// SIG // AzEMBgorBgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAM
// SIG // BgorBgEEAYI3AgEVMC8GCSqGSIb3DQEJBDEiBCD0ZnkH
// SIG // VbBOirxkhO4S484ZHEU61EhVDq4qgoVLe5a3KzBCBgor
// SIG // BgEEAYI3AgEMMTQwMqAUgBIATQBpAGMAcgBvAHMAbwBm
// SIG // AHShGoAYaHR0cDovL3d3dy5taWNyb3NvZnQuY29tMA0G
// SIG // CSqGSIb3DQEBAQUABIIBAMoX+LDCXAtfZPfN3hGf3BYP
// SIG // 5T797TFxoQP6oonRFLPiX919DQpRF/+i4lfAEPWpfoiG
// SIG // y7Kl3swGHv+gsyc+5KNqRmvKmQBSLpD18ZEMiZlCioeu
// SIG // QP4Ex4CT17av28Dr9CyYkNpbiCb78z/2bikTQMkq6Guv
// SIG // Na+fZ3yCb/74pF9srIpqTOYIHXgzcBskRfoDDZyAolFR
// SIG // aFU4JtZr3Q6b7I8CAkTQWmvTYI60i9pJtgyR5f7/J0Xm
// SIG // Vfwl2LgpLTKO5YriSby2HuM3m0pMMZlEzVY1kNa0mIWL
// SIG // cYL4O6P7vLkfPGp6Xtejv3Gy7Ac6acvlh4mEzM/J+GIa
// SIG // S2TtiHQcenahgheUMIIXkAYKKwYBBAGCNwMDATGCF4Aw
// SIG // ghd8BgkqhkiG9w0BBwKgghdtMIIXaQIBAzEPMA0GCWCG
// SIG // SAFlAwQCAQUAMIIBUgYLKoZIhvcNAQkQAQSgggFBBIIB
// SIG // PTCCATkCAQEGCisGAQQBhFkKAwEwMTANBglghkgBZQME
// SIG // AgEFAAQgUk4aT1xgMLYwKKJbgM7oBiJW3OxlpiauekRL
// SIG // JdhFog0CBmaVVoPsYRgTMjAyNDA4MDEyMDA5NTAuNjY4
// SIG // WjAEgAIB9KCB0aSBzjCByzELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3Bl
// SIG // cmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNO
// SIG // OkE0MDAtMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3Nv
// SIG // ZnQgVGltZS1TdGFtcCBTZXJ2aWNloIIR6jCCByAwggUI
// SIG // oAMCAQICEzMAAAHs4CukgtCRUoAAAQAAAewwDQYJKoZI
// SIG // hvcNAQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQG
// SIG // A1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIw
// SIG // MTAwHhcNMjMxMjA2MTg0NTM4WhcNMjUwMzA1MTg0NTM4
// SIG // WjCByzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
// SIG // bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
// SIG // FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMc
// SIG // TWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUG
// SIG // A1UECxMeblNoaWVsZCBUU1MgRVNOOkE0MDAtMDVFMC1E
// SIG // OTQ3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFt
// SIG // cCBTZXJ2aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
// SIG // MIICCgKCAgEAsEf0bgk24MVFlZv1XbpdtrsHRGZtCKAB
// SIG // bOqCK9/VSvyLT/NHJ/vE5rT+u4mmweA5gCifRh+nSRoR
// SIG // DyaWOL0ykUjsK0TcVSCqDz3lBd3+FchxHKP7tUFGnZcA
// SIG // 9d9jbmQsW54ejItpSxu6Q77M2ajBu0tzAotm5Np77Rin
// SIG // XgCC/h++4C+K9NU0lm+67BNiW9T/zemP1tQqg4tfyG9/
// SIG // 80all7eM8b3SBnD40uGSskBBd0hGQKuFyI4sqMDx2qjW
// SIG // 2cXX9pFjv2o3X01PObfd+AlwIp29KPrkPSrWijS1VXDX
// SIG // +UKUuH+vzLFzryBbgmDEXSg46Zr6MAHi/tY9u2wsQgaQ
// SIG // 0B61pHz82af1/m7fQuxOYTz+h1UaKgWEe7tYFH+RhKvu
// SIG // a9RwNI2o59EOjr32HJBNB3Tr+ilmvrAJiRuzw702Wnu+
// SIG // 4aJs8eiD6oIFaTWbgpO/Un1ZpyrvRefFAJ1OfE6gxxMx
// SIG // rEJzFECrLUt845+klNDSxBTQnrZbmipKlg0VSxFm7t9v
// SIG // SBId7alz138ukYf8Am8HvUgiSKKrQXsQaz8kGANl2s9X
// SIG // yvcrE7MdJAPVdScFVeOCGvXPjMLQEerKinQIEaP27P17
// SIG // vILmvCw3uilsrve+HvZhlu2TvJ2qwxawE9RFxhw7nsoE
// SIG // ir79iu8AfJQIDBiY+9wkL6/o6qFsMel3cnkCAwEAAaOC
// SIG // AUkwggFFMB0GA1UdDgQWBBT0WtBHZP4r9cIWELFfFIBH
// SIG // +EyFhjAfBgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtT
// SIG // NRnpcjBfBgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3
// SIG // Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3Nv
// SIG // ZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5j
// SIG // cmwwbAYIKwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBo
// SIG // dHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2Nl
// SIG // cnRzL01pY3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0El
// SIG // MjAyMDEwKDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1Ud
// SIG // JQEB/wQMMAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIH
// SIG // gDANBgkqhkiG9w0BAQsFAAOCAgEAkrzEpDEq745Qz2oP
// SIG // AEW9DhawELUizA6TdFGNxY7z4cBig664sZp7jH465lY0
// SIG // atbvCIZA7xhf2332xU6/iAJw0noPEwfc3xv+Mm5J7qKZ
// SIG // JW3ho27ezC8aX4aJQhEchHNtDzGSic/Ur837jtZ+ca6y
// SIG // zi/JtJ5r+ZAXL/stQFyeUHC4nJoXtiKd/w+uxHeqD6kC
// SIG // NN5g42GktTUIQTbbue8Dyl2dRKDU6AZPGwOvN/cNdfW/
// SIG // mvVk6KiLJHURqD+cYwyL/pnNLwR4WRpCVb3yIZuAKfM6
// SIG // bQu8VQJctI3jr+XVBjAmIGY76E5oHeOW6gMLp3Zj5Rrq
// SIG // +3pXlmHnS0H+7Ny+fqn2mP8RIf/bqNe0pzP4B1UhgM75
// SIG // 63hoTqwdi7XSqFUnuS22KYoV3LQ3u+omLS/pocVzxKc3
// SIG // Wt2yZYT0zkNyjhGQKVREQaOcpbVozwlpV8cgqZeY4/Z2
// SIG // NJ33dO9W3pp6LvAN61Ga3YCiGrrbB+0hzojnm2Rqjbvu
// SIG // ttrybWt3gGLAgGsQHAfQYiT5Wu12nfaq02HU+OVZQmE7
// SIG // QUmOKFUbHnUgA7/fY7/4mCABstWwsrbmtKP0Kr/Xqyps
// SIG // 0Ak1TF2g3NuQ0y3DBia0bmtytMYr3bZ6AXsc1Sa+sl6j
// SIG // PgWtsISFUbxnK4gZCl9BSRXlu69vV1/pNHuA5xuogRyk
// SIG // I3nOlTcwggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZ
// SIG // AAAAAAAVMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQG
// SIG // EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UE
// SIG // BxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
// SIG // cnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9v
// SIG // dCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0y
// SIG // MTA5MzAxODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL
// SIG // 1yR5vQ7VgtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4X
// SIG // YDP/XE/HZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY
// SIG // 6GB9alKDRLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhu
// SIG // je3XD9gmU3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7
// SIG // M62AW36MEBydUv626GIl3GoPz130/o5Tz9bshVZN7928
// SIG // jaTjkY+yOSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+
// SIG // tVSP3PoFVZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCG
// SIG // MFxPLOJiss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39
// SIG // IM9zfUGaRnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+A
// SIG // utuqfjbsNkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDy
// SIG // t0cY7afomXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDq
// SIG // hFFG4tG9ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrX
// SIG // Y28MyTZki1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH
// SIG // 29wb0f2y1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLE
// SIG // hReTwDwV2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3
// SIG // PmriLq0CAwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQF
// SIG // AgMBAAEwIwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8
// SIG // RjUpzxD/LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJl
// SIG // pxtTNRnpcjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30B
// SIG // ATBBMD8GCCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5o
// SIG // dG0wEwYDVR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGC
// SIG // NxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8G
// SIG // A1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/o
// SIG // olxiaNE9lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZF
// SIG // aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwv
// SIG // cHJvZHVjdHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMu
// SIG // Y3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+
// SIG // aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0
// SIG // cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJ
// SIG // KoZIhvcNAQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5y
// SIG // S/ypb+pcFLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1
// SIG // OW27DzHkwo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2Lpyp
// SIG // glYAA7AFvonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM
// SIG // 9W0jVOR4U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9Ak
// SIG // vUCgvxm2EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6L
// SIG // GYnn8AtqgcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmR
// SIG // sqlb30mjdAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2
// SIG // zsZ0/fZMcm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyx
// SIG // TkctwRQEcb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGO
// SIG // WhmRaw2fpCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJ
// SIG // Xk+d0tBMdrVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FB
// SIG // SX5+k77L+DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+
// SIG // 57XQKBqJC4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq
// SIG // 8CdCPSWU5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cir
// SIG // Ooo6CGJ/2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGby
// SIG // oYIDTTCCAjUCAQEwgfmhgdGkgc4wgcsxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJTAjBgNVBAsTHE1pY3Jvc29mdCBBbWVy
// SIG // aWNhIE9wZXJhdGlvbnMxJzAlBgNVBAsTHm5TaGllbGQg
// SIG // VFNTIEVTTjpBNDAwLTA1RTAtRDk0NzElMCMGA1UEAxMc
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaIjCgEB
// SIG // MAcGBSsOAwIaAxUAjhz7YFXc/RFtIjzS/wV6iaKlTH+g
// SIG // gYMwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYD
// SIG // VQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAx
// SIG // MDANBgkqhkiG9w0BAQsFAAIFAOpWPRIwIhgPMjAyNDA4
// SIG // MDExNjU3NTRaGA8yMDI0MDgwMjE2NTc1NFowdDA6Bgor
// SIG // BgEEAYRZCgQBMSwwKjAKAgUA6lY9EgIBADAHAgEAAgI1
// SIG // gjAHAgEAAgIUbjAKAgUA6leOkgIBADA2BgorBgEEAYRZ
// SIG // CgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAIDB6Eg
// SIG // oQowCAIBAAIDAYagMA0GCSqGSIb3DQEBCwUAA4IBAQAK
// SIG // aVZBXxss0qFYow3t0JcI1gsk6MmvNE/7GteJHYjXF8v0
// SIG // W7Fb2Tq5K8YqT7aw2Gz8sW8huNDT4dMHeN+NTqjdcFxc
// SIG // FHZO5YKuMp1uclat1ZlhhBteuL/YnF1r+KYCfzmpJaW8
// SIG // e6Wclumd3t/E6m4SRD73MISNvYmIsd46sYs9ZDgtIezH
// SIG // QIzJWED2HaJlY3PjchKr0K5SOj0GV5wiqbZ4izTzjlCA
// SIG // fDKMsvjoK8hQhjwKxDxdM3+bqV1Wy2Jz/5vQkdsCI0rN
// SIG // Hq2LLazU2il9TEHO5veClB450X51qHAaNM/vWWPxx0Et
// SIG // KDLqJHDq4oaLfksWq2xeusd5mvuBPnfFMYIEDTCCBAkC
// SIG // AQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
// SIG // c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
// SIG // BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UE
// SIG // AxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAC
// SIG // EzMAAAHs4CukgtCRUoAAAQAAAewwDQYJYIZIAWUDBAIB
// SIG // BQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRAB
// SIG // BDAvBgkqhkiG9w0BCQQxIgQgwnIVKxv/Z/0xVxLbIjNZ
// SIG // fgqhu9AYAx3YFLZ+T9dKB+0wgfoGCyqGSIb3DQEJEAIv
// SIG // MYHqMIHnMIHkMIG9BCAnCeb1an03yIcdtUAQWysqP8XI
// SIG // kCF2qDFlC3owBNUKgzCBmDCBgKR+MHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwAhMzAAAB7OArpILQkVKAAAEA
// SIG // AAHsMCIEIE/+SbR303zoNy0Lc5Zh8SPM71IId0vQCfwR
// SIG // VqpYKn39MA0GCSqGSIb3DQEBCwUABIICAE/ax3DN6C+B
// SIG // Mq5KhEa+yMiRYNgiPThuESNqRFoCo2E8doJrr47oLXIR
// SIG // TyWP/KBc6haUz/RpB56VzXZ/In1o1C3k1Ss6Y4Mt1VcP
// SIG // g0DpNsi5WwAAuc/RW8eJUMg1l3QFaHSWAgDvdovcC5S2
// SIG // YKGUtuOXVs4wWAlCC1AcTurecRP7pzZ8kv6S5LoAn8ab
// SIG // OhkJoqCvO3bA7S0iJY6YsFpChkvOzyprF8iWcH10ZYAk
// SIG // DLHB9Wpfu6kLmLNI8D1XNcfJluSGpo6hb4zi8pFeETdr
// SIG // 6MESoE82i4d27F5HnvKlXZCZopZQS7/4WdRpKqWjFc0s
// SIG // 7+XxfobuzrM8xMCVe4qBFbkn3pMfh/s19PqbSB1mAO9M
// SIG // 2owDwEgGvhuePR/pQ/q1KZnU5GSjr4b7DANvpSKH1T+J
// SIG // G946chpT62tLv/zGSjUuGi9Df1nv4x3UQP6VSdS5BIEa
// SIG // 2O6SfshIDuN/AX7gw3eEF+tgey2ajnGXV9QZJ176j7qD
// SIG // SAdtELECEKZFBXawQJoac6S1ow1nSor64czHhS782TEg
// SIG // DO9xecTgEhbFJ8KLv7C/QfOCyJSw6yQ2k4wSpTNSoekj
// SIG // ef1ELUVgH+Ga03TwvMTi9lwKgfNP3ZUyKowbCDleD7N7
// SIG // 2L3an6wpUI8/cmBrP6Yz5bu0wUhIrVM5qg5a3SndiErV
// SIG // DLgTLtSUcHPv
// SIG // End signature block
